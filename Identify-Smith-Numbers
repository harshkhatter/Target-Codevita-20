# https://www.hackerrank.com/challenges/identify-smith-numbers

#!/bin/python3

import os
import sys

def s(n):
    res=[]
    while(n!=0):
        res.append(n%10)
        n//=10
    return res
def q(f):
    res=[]
    for i in f:
        if(i//10==0):
            res.append(i)
        else:
            res.extend(s(i))
    return res
def prime_factors(n):
    i = 2
    factors = []
    while i * i <= n:
        if n % i:
            i += 1
        else:
            n //= i
            factors.append(i)
    if n > 1:
        factors.append(n)
    r=q(factors)
    return sum(r)

# Complete the solve function below.
def solve(n):
    t=prime_factors(n)
    rs=sum(s(n))
    if(t==rs):
        return 1
    return 0

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input())

    result = solve(n)

    fptr.write(str(result) + '\n')

    fptr.close()

# https://www.hackerrank.com/challenges/identify-smith-numbers
